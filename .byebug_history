c
courses
c
course_date > start_date
course_date < start_date
course_date = @requests.map(&:courses).flatten.first[:date]
start_date
all_courses = @requests.map(&:courses).flatten.first[:date] < Date.today
all_courses = @requests.map(&:courses).flatten.first[:date].class
all_courses = @requests.map(&:courses).flatten.first[:date]
all_courses = @requests.map(&:courses).flatten.first
all_courses = @requests.map(&:courses).flatten
c
@requests.map(&:courses).flatten.first[:date]
@requests.map(&:courses).flatten.first.date[:date]
@requests.map(&:courses).flatten.first.date
@requests.map(&:courses).flatten.first
@requests.map(&:courses).flatten
@requests.map(&:courses)
@requests
c
Date.strptime(request[:courses].first[:date], '%Y-%m-%d')
Date.strptime(, '%Y/%m/%d')
Date.strptime(request[:courses].first[:date], '%d/%m/%Y')
Date.strptime(request[:courses].first[:date], '%Y/%m/%d')
Date.strptime(course[:date], '%Y/%m/%d')request[:courses].first[:date]
request[:courses].first[:date].class
request[:courses].first[:date]
request[:courses].first
request[:courses]
request
c
@requests
request
c
parsed_data[:requests]
c
request.courses
c
request.courses
request
c
request.courses
c
request.courses.first
request.courses
request
c
@requests
c
@fields
c
@fields
c
@requests
request.teacher.firstname
request.teacher
request
c
request.teacher
request
c
request.teacher
request.level
request.id
request
c
parsed_data[:requests]
c
@requests
c
@requests.first.id
@requests.first
@requests
c
@requests
c
@requests
c
@requests
c
@teachers.empty?
@teachers
c
cc
c
ids = parsed_data[:teachers].first[:skills].map { |skill| { field: @fields[(skill[:field]-1)], level:@levels[(skill[:level]-1)] }}
ids = parsed_data[:teachers].first[:skills].map { |skill| { field: skill[:field], level: skill[:level] }}
ids = parsed_data[:teachers].first[:skills].map { |skill| { field: 1, level: 1 }}
ids = parsed_data[:teachers].first[:skills].map { |skill| { field: 1, level: 1 } }
parsed_data[:teachers].first[:skills].map { |skill| { field: skill[:field], level: skill[:level] } }
parsed_data[:teachers].first[:skills].map
parsed_data[:teachers]
@fields[0]
@fields
@levels
c
@teachers
@levels[0]
@levels
@fields
c
@fields
c
@fields
c
id = parsed_data[:teachers].first[:skills].map { |skill| {field: @fields, level: @levels}}
c
parsed_data
c
id = parsed_data[:teachers].first[:skills].map { |skill| {field: cskill[:field], level: skill[:level]}}
id = parsed_data[:teachers].first[:skills].map { |skill| {field: skill[:field], level: skill[:level]}}
id = parsed_data[:teachers].first[:skills].map { |skill| {field: "hello", level: "hello"}}
parsed_data[:teachers].first[:skills]
parsed_data[:teachers].first
parsed_data.first
parsed_data.first['skills']
parsed_data.first[:skills]
parsed_data.first.skills
parsed_data.first
parsed_data
c
parsed_data[:teachers]
c
@teachers
c
@teachers
c
@teachers
c
@teachers
c
@teachers
c
tskills = @teachers.last.skills.map { |skill| {field: skill[:field].id, level: skill[:level].id} }
@teachers.last.skills
@teachers.last
@teachers
c
@teachers
c
parsed_data[:teachers] = @teachers.map { { |teacher| id: teacher.id, firstname: teacher.firstname, lastname: teacher.lastname, skills: teacher.skills } }
parsed_data[:teachers] = @teachers.map { { |teacher| id: teacher.id, firstname: teacher.firstname, lastname: teacher.lastname, skills: teacher.skills }
parsed_data[:teachers] = @teachers.map { |teacher| id: teacher.id, firstname: teacher.firstname, lastname: teacher.lastname, skills: teacher.skills }
parsed_data[:teachers] = @teachers.map(&:to_json)
@teachers
c
@teachers
c
parsed_data
c
parsed_data
c
JSON.parse(File.read(@json_file))
@json_file
File.open(@json_file, 'w') { |f| f.write(JSON.pretty_generate(parsed_data)) }
    end
      f.write(JSON.pretty_generate(parsed_data))
    File.open(@json_file, 'w') do |f|
@teachers.map(&:to_json)
@teachers
c
@teachers
exit
c
@teachers
teacher
c
Teacher.last
Teacher
teacher
@teachers
c
new_skill
c
new_skill
level
field
new_skill
c
@fields[field_id - 1]
@fields[fields_id - 1]
@fields.find_by_id(1)
@fields.find(1)
@fields
c
@teachers.first.skills
@teachers.first
@teachers
level
@levels.select { |l| l.id == 1 }.first
c
parsed_data
c
parsed_data
c
@teachers
teacher
c
field
new_skill
c
@teachers.map(&:to_json)
@teachers
c
@teachers
parsed_data
c
level
field
new_skill
c
select_field
selct_field
field
c
@fields[2]
@fields.find(2)
field_id
@fields.select { |f| f.id == 1 }.first
@fields.select { |f| f.id == 1 }
@fields.select { |f| f.id == answer.to_i }.first
@fields[1]
@fields
c
@fields
field
new_skill
c
field
new_skill
c
@fields
c
@fields
c
@teachers
c
@teachers.first.attributes.to_json
@teachers.first.attributes
@teachers.first
@teachers
c
@teachers.first.attributes.to_json
@teachers.first.attributes
@teachers.first
c
@teachers.first.attributes
@teachers.first
@teachers
c
parse_json[:fields]
parse_json[:teachers]
parse_json.fetch(:fields)
parse_json.fetch(:teachers)
parse_json.fetch('teachers')
